"use strict";(self.webpackChunkhomework_40=self.webpackChunkhomework_40||[]).push([[96],{65:(t,e,o)=>{const s=new class{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"http://localhost",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this._URL=t,this._PORT=e;const s=new Headers(o);s.set("Content-Type","application/json"),s.set("charset","utf-8"),this._headers=s}async getTodos(){try{const t=await fetch(`${this._URL}:${this._PORT}/todos`,{headers:this._headers});if(t.ok)return await t.json();throw Error("errorin getTodos")}catch(t){console.log("getTodos error")}}async createTodoRecord(t){try{const e=await fetch(`${this._URL}:${this._PORT}/create`,{headers:this._headers,method:"POST",body:JSON.stringify(t)});if(e.ok)return await e.json();throw Error("createTodoRecord error")}catch(t){console.log(t)}}async updateTodo(t){try{const e=await fetch(`${this._URL}:${this._PORT}/update`,{headers:this._headers,method:"POST",body:JSON.stringify({_id:t._id,completed:t.status,title:t.value})});if(e.ok)return await e.json();throw Error("updateTodo error")}catch(t){console.log(t)}}async deleteTodo(t){try{const e=await fetch(`${this._URL}:${this._PORT}/delete/${t}`,{headers:this._headers,method:"DELETE"});if(e.ok)return await e.json();throw Error("updateTodo error")}catch(t){console.log(t)}}};class i{constructor(t,e){this.form=document.querySelector(".form"),this.todoListContainer=document.querySelector(".todo-list"),this.db=t,this.init(),this.initEvents(),this.db.subscribeStorage(this.handleStorageEvent.bind(this)),this.modal=e}async init(){try{const t=await this.db.getAllRecords();if(!t)return;t.forEach((t=>this.drawItem(t,t._id)))}catch(t){console.log("err",t)}}initEvents(){this.form&&this.form?.addEventListener("submit",this.add.bind(this)),this.todoListContainer?.addEventListener("click",this.handleTodoItemEvents.bind(this))}drawItem(t,e){if(!this.todoListContainer)return;const o=document.createElement("li"),s=document.createElement("label"),i=document.createElement("input"),a=document.createElement("button"),n=document.createElement("button");i.classList.add("form-check-input"),i.setAttribute("type","checkbox"),i.setAttribute("id",e),i.checked=t.status,s.classList.add("todo-list__item-text"),s.setAttribute("for",e),s.textContent=t.value,o.setAttribute("data-todo-id",e),o.classList.add("todo-list__item"),a.textContent="delete",a.classList.add("btn","btn-danger","todo-list__item-btn"),n.classList.add("btn","btn-primary","todo-list__item-modalShow"),n.textContent="show modal",o.appendChild(i),o.appendChild(s),o.appendChild(a),o.appendChild(n),this.todoListContainer.appendChild(o)}onDelete(t){t.parentElement.remove(),this.db.delete(t.parentElement.getAttribute("data-todo-id"))}onModalOpen(t){const e=t.parentElement.getAttribute("data-todo-id"),o=this.db.get(e);console.log(o),o&&this.modal.openModal(o,e)}onCheckboxToggle(t){const e=t.parentElement.getAttribute("data-todo-id");t.parentElement.classList.toggle("submited"),this.db.update(String(e),"status",t.checked)}handleTodoItemEvents(t){const e=t.target;e?.parentElement&&(e.classList.contains("todo-list__item-btn")&&this.onDelete(e),e.classList.contains("todo-list__item-modalShow")&&this.onModalOpen(e),e.classList.contains("form-check-input")&&this.onCheckboxToggle(e))}async add(t){const e=t.target;t.preventDefault();const o=new FormData(e).get("task"),s={completed:!1,title:String(o)};try{const t=await this.db.save(s);t&&(this.drawItem(t,t._id),this.form?.reset())}catch(t){console.log(t)}}handleStorageEvent(t){if(t.newValue&&this.drawItem(JSON.parse(t.newValue),String(t.key)),t.oldValue&&this.todoListContainer){const e=Array.from(this.todoListContainer?.children).find((e=>e.getAttribute("data-todo-id")===t.key));e?.remove()}}}const a=new class{constructor(){this._modal=document.querySelector(".modal"),this._text=document.querySelector("[data-bs-text]"),this._title=document.querySelector("[data-bs-title]"),this._modal?.addEventListener("click",this.closeModal)}closeModal=t=>{t.target.getAttribute("data-bs-dismiss")&&this._modal?.classList.toggle("show-modal")};openModal(t,e){let{value:o,status:s}=t;this._modal&&this._modal.classList.toggle("show-modal"),this._text&&(this._text.innerText=o),this._title&&(this._title.innerText=`Task#${e} Status:${s}`)}},n=new class{constructor(t,e){this.api=e,this.instance=t}async save(t){try{const e=await this.api.createTodoRecord(t);if(!e)return;return this.instance.setItem(e._id,JSON.stringify(e)),{_id:e._id,value:e.title,status:e.completed}}catch(t){console.log(t)}}get(t){const e=this.instance.getItem(t);return console.log(e),e?JSON.parse(e):null}async getAllRecords(){try{const t=await this.api.getTodos();if(!t)return;return t.map((t=>{const e={_id:t._id,value:t.title,status:t.completed};return this.instance.setItem(t._id,JSON.stringify(e)),e}))}catch(t){throw console.log(t),Error("error")}}async delete(t){try{await this.api.deleteTodo(t)&&this.instance.removeItem(t)}catch(t){console.log(t)}}async update(t,e,o){try{const s=this.instance.getItem(t),i={...JSON.parse(s),[e]:o},a=await this.api.updateTodo(i);a&&this.instance.setItem(t,JSON.stringify({status:a.completed,_id:a._id,value:a.title}))}catch(t){console.log(t)}}clear(){this.instance.clear()}subscribeStorage(t){window.addEventListener("storage",t)}}(localStorage,s);o.e(40).then(o.bind(o,40)).then((()=>{new i(n,a)}))}},t=>{t.O(0,[547],(()=>{return e=65,t(t.s=e);var e}));t.O()}]);